# An optional string of text to output between major sections of the generated
# file as a warning against manual editing
autogen_warning = "/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */"
# An optional namespace to output around the generated bindings
namespace = "ffi"

# The style to use for curly braces
braces = "NextLine"
# The desired length of a line to use when formatting lines
line_length = 80
# The amount of spaces in a tab
tab_width = 4
# The language to output bindings in
language = "C++"
usize_is_size_t = true

[parse]
# Whether to parse dependent crates and include their types in the generated
# bindings
parse_deps = false
# Whether to use a new temporary target directory when running `rustc --pretty=expanded`.
# This may be required for some build processes.
clean = false

[export]
# Types of items that we'll generate.
item_types = [
    "constants",
    "globals",
    "enums",
    "structs",
    "unions",
    "typedefs",
    "opaque",
    "functions",
]

[fn]
# How to format function arguments
args = "Auto"
# A rule to use to rename function argument names
rename_args = "CamelCase"

[struct]
# A rule to use to rename field names
rename_fields = "None"
# Whether to derive an operator== for all structs
derive_eq = false
# Whether to derive an operator!= for all structs
derive_neq = false
# Whether to derive an operator< for all structs
derive_lt = false
# Whether to derive an operator<= for all structs
derive_lte = false
# Whether to derive an operator> for all structs
derive_gt = false
# Whether to derive an operator>= for all structs
derive_gte = false

[enum]
# A rule to use to rename enum variants
rename_variants = "None"
# Whether to emit enums using "enum class" when targeting C++.
enum_class = true
